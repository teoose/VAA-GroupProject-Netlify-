{
  "hash": "6f547492d1afeab8544ea563e4d2a19e",
  "result": {
    "markdown": "---\ntitle: \"Our Storyboard\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n  editor: visual\n---\n\n\n# 1. Storyboard\n\nStoryboard aims to visually maps out user's experience. It is a tool for making strong visual connection between the insights uncovered based on research and user's interaction with the R Shiny dashboard application. The interactive components and UI design aims to facilitate data (and geospatial) exploration and analysis for users to develop effective counter measures and strategies.\n\nThe prototype can be broadly classify into three key areas:\n\n-   Aspatial Analysis\n\n-   Geospatial Analysis\n\n-   Confirmatory Analysis\n\nAnd the team has conceptualised the proposed layouts and UI features as follows:\n\nFor enhanced user experience, the prototype included 'filter' components (i.e. parameter selections) and 'chart interpretation' boxes, and have aligned them mainly to the left side of the web pages. The 'chart interpretation' box provides brief explanation of how each chart can be interpreted.\n\n## Section One - Aspatial Analysis\n\n### Aspatial Analysis - Overview\n\nThis tab serves as the \"landing page\" that displays the map of Myanmar and its spatial points of armed conflicts over the years (i.e. 2010 to 2023). Figure below shows the UI interactive features in the **Overview** sub-tab.\n\n![Aspatial Analysis - Overview - Part 1](images/Aspatial1_Overview1.JPG)\n\n![Aspatial Analysis - Overview - Part 2](images/Aspatial1_Overview2.JPG)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Overview** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nAspatialOverviewrow1 <-  fluidRow(\n  highchartOutput(), # display line chart\n  sliderInput(), # select year range\n  selectizeInput(), # select event (allows multiple selection)\n  radioButtons(), # select administrative region level\n  selectizeInput(), # select administrative region (allows multiple selection)\n  actionButton(), # action button\n  checkboxInput(), # conditional panel (option to display line chart)\n  highchartOutput(), # display line chart\n  checkboxInput(), # conditional panel (option to display map information)\n  leafletOutput(), # display point spatial map\n)\n\nAspatialOverviewrow2 <-  fluidRow(\n  DT::dataTableOutput() # display datatable\n)\n\n# Server Components\noutput1-1-1 <- renderLeaflet({}) # point spatial map\noutput1-1-2 <- renderLeHighchart({}) # line chart\noutput1-1-3 <- DT::renderDataTable({}) # datatable\n```\n:::\n\n\n### Aspatial Analysis - Distribution Analysis\n\nThis analysis page allows users to perform data visualisation to show the armed conflict incidents’ (and fatalities) spatial and density distribution represented in choropleth map and density ridge plot respectively. Figure below shows the UI interactive features in the **Distribution Analysis** sub-tab.\n\n![Aspatial Analysis - Distribution Analysis sub-tab](images/Aspatial2_DistributionAnalysis.JPG)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Distribution Analysis** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nAspatialDistributionrow1 <-  fluidRow(\n  sliderInput(), # select year range\n  radioButtons(), # select administrative region level\n  radioButtons(), # select display rates\n  selectInput(), # select colour palette\n  checkboxInput(), # Customise Spatial Map\n  selectInput(), # Spatial Map Classification Type\n  sliderInput(), # Number of Classes\n  checkboxInput(), # Customise Density Ridge Plot\n  selectInput(), # Density Ridge Style\n  tmapOutput(), # choropleth map\n  plotOutput() # density ridge plot\n)\n\nAspatialDistributionrow2 <-  fluidRow(\n  textOutput()\n)\n\n\n# Server Components\noutput1-2-1 <- renderTmap() # display choropleth map\noutput1-2-2 <- renderPlot() # display density ridge plot\n```\n:::\n\n\n## Section Two - Geospatial Analysis\n\n### Geospatial Analysis - Local Measures of Spatial Autocorrelation\n\nThis analysis page allows users to perform a cluster and outlier analysis, to identify significant clusters of high and low values and outliers. Using the Local Moran’s I statistic, features are categorised into 2 clusters (High-High, Low-Low), 2 outliers (High-Low, Low-High) and 1 insignificant classes.\n\n![Geospatial Analysis - Local Measures of Spatial Autocorrelation sub-tab](images/Geospatial1_LocalMeasures.JPG)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Local Measures of Spatial Autocorrelation** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nCluster2 <- fluidRow(\n  selectInput(), # select period\n  selectInput(), # select Moran Event Type\n  radioButtons(), # select Contiguity method \n  selectInput(), # select Spatial Weights Style\n  sliderInput(), # Number of Simulations\n  actionButton(), # action button \n  radioButtons(), # select confidence interval \n  selectInput(), # select Lisa Classification\n  selectInput(), # select Local Moran's Stat\n  plotOutput(), # LocalMoranMap\n  plotOutput(), # LisaMap \n  textOutput(),\n  DT::dataTableOutput()\n)\n\n# Server Components\noutput2-1-1 <- renderPlot()\noutput2-1-2 <- renderPlot()\noutput2-1-3 <- renderDataTable()\n```\n:::\n\n\n### Geospatial Analysis - Hot & Cold Analysis\n\nThis analysis page allows users to perform a Hot & Cold Spot analysis, to identify significant areas of high and low values based on a calculated distance. Using the Getis-Ord Gi\\* statistic, features are grouped together when simila High (Hot) or Low (Cold) values are found in a cluster. \n\n![Geospatial Analysis - Hot & Cold Analysis sub-tab](images/Geospatial2_HotCold.JPG)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Hot & Cold Analysis** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nHotCold1 <- fluidRow(\n  selectInput(), # select period\n  selectInput(), # select Moran Event Type\n  radioButtons(), # select Contiguity method \n  sliderInput(), # Number of Simulations\n  actionButton(), # action button \n  radioButtons(), # select confidence interval \n  selectInput(), # select local Gi stats\n  plotOutput(), # GI Stats\n  plotOutput(), # Sig hot/cold\n  textOutput(),\n  DT::dataTableOutput()\n)\n\n# Server Components\noutput2-2-1 <- renderPlot()\noutput2-2-2 <- renderPlot()\noutput2-2-3 <- renderDataTable()\n```\n:::\n\n\n### Geospatial Analysis - Emerging Hot Spot Analysis\n\nThis analysis page allows users to perform an Emerging Hot Spot analysis, to reveal and describe how hot spots and cold spots have changed over time. After identifying temporal trends, features are classified into one of 17 ESRI hot spot classifications.\n\n![Geospatial Analysis - Hot & Cold Analysis sub-tab](images/Geospatial3_EmergingHotspot.JPG)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Emerging Hot Spot Analysis** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nEHSA2 <- fluidRow(\n  selectInput(), # select event type\n  radioButtons(), # select Contiguity Method\"\n  sliderInput(), # select Time Lag of spatial neighbours\n  sliderInput(), # Number of Simulations\n  actionButton(),\n  checkboxInput(), # checkbox to show EHSA classes\n  plotlyOutput(), # display EHSA ba chart \n  checkboxInput(), # checkbox to show GI* trend plot\"\n  selectizeInput(), # select district\n  plotlyOutput(), # display Giplot\n  radioButtons(), # select Confidence level\n  plotOutput(), # EHSAmap\n  textOutput(), # EHSAText\n  DT::dataTableOutput(), # data table\n  textOutput()\n) \n# Server Components\noutput2-3-1 <- renderPlot()\noutput2-3-2 <- renderPlot()\noutput2-3-3 <- renderDataTable()\n```\n:::\n\n\n## Section Three - Confirmatory Analysis\n\n### Confirmatory Analysis - One-Way ANOVA Test\n\nThis analysis page allows users to perform a One-Way ANOVA test to identify if there is any significant difference between the mean or median value for event types and the number of fatalities. If the p-value is below the critical value, it means that the null hypothesis has sufficient statistical evidence to support. Whereas if the p-value is above the critical value, the null hypothesis will be rejected due to insufficient statistical evidence.\n\n![Confirmatory Analysis - One-way ANOVA Test sub-tab](images/Confirm1_Anova.JPG)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **One-way ANOVA Test** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nConfirm1 <- fluidRow(\n  selectInput(), # select time\n  selectizeInput(), # select event type\n  actionButton(), # reset button\n  selectInput(), # select test type\n  selectInput(), # Pairwise Display\n  selectInput(), # P-value adjustment method \n  radioButtons(), # select Confidence level\n  plotOutput(), # display Anovaplot\n)\n\nConfirm2 <- fluidRow(\n  textOutput()\n)\n\n# Server Components\noutput3-1-1 <- renderPlot()\n```\n:::\n\n\n### Confirmatory Analysis - Visualising Categorical Data\n\nThis analysis page allows users to visualise categorical data using mosaic plot to find association between the variables. The size of each tile would represent the proportion of observations for the variable. The colour of each tile would represent the residual where red tiles indicate significant negative residual where frequency is less than expected and blue tiles indicate significant positive residual where frequency is more than expected. The intensity of the colour represents the magnitude of the residuals which is shown on the legend on the right.\n\n![Confirmatory Analysis - Visualising Categorical Data sub-tab](images/Confirm2_vcd.JPG)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Visualising Categorical Data** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nConfirm3 <- fluidRow(\n  selectInput(), # select Year\n  selectizeInput(), # Region\n  selectizeInput(), # Event Type\n  selectInput(), # Include Data with or without Fatalities\n  actionButton(), \n  plotOutput() # plot Mosaic plot\n)\n\nConfirm4 <- fluidRow(\n  textOutput()\n)\n\n# Server Components\noutput3-2-1 <- renderPlot()\n```\n:::\n\n\n# 2. R Shiny Application (simplified code)\n\nThe storyboard (in Section 1) facilitates the development of a prototype in R Shiny Application. Iterative prototyping will allow continuous improvement of the final project.\n\nThe proposed layouts and UI features\n\nCode chunk below shows the simplified version of R Shiny Application for Decoding Chaos prototype.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#========================================================== \n## load R packages\n#========================================================== \npacman::p_load(shiny, shinydashboard, shinycssloaders, \n               tidyverse, dplyr, leaflet, leaflet.extras, plotly, \n               ggthemes, fresh, sf, sfdep, tmap, tm, \n               ggraph, DT, spatstat,\n               lubridate,viridis, ggplot2, readr, purrr, ggstatsplot, \n               vcd, ggmosaic, forcats,\n               ggridges, ggdist, highcharter)\n\n\n#========================================================== \n## UI Components\n#========================================================== \n# main header ---\nheader <- dashboardHeader(title = \"Decoding Chaos\")\n\n\n# main sidebar ---\nsidebar <- dashboardSidebar()\n\nsidebarMenu(\n    menuItem(\"Aspatial\", tabName = \"Aspatial\"),\n    menuItem(\"Geospatial\", tabName = \"Geospatial\"),\n    menuItem(\"Confirmatory\", tabName = \"Confirmatory\"),\n    menuItem(\"Visit ACLED data\"))\n\n# main body ---\nbody <- dashboardBody(\n  tabItems(\n    tabItem(tabName = \"Aspatial\",\n            AspatialSubTabs\n    ),\n    tabItem(tabName = \"Cluster\",\n            ClusterSubTabs \n    ),\n    tabItem(tabName = \"ConfirmatoryAnalysis\",\n            ConfirmSubTabs\n)))\n\n# fluidRows ---\n\n# aspatial analysis tab\nAspatialOverviewrow1 <-  fluidRow(\n  highchartOutput(), # display line chart\n  sliderInput(), # select year range\n  selectizeInput(), # select event (allows multiple selection)\n  radioButtons(), # select administrative region level\n  selectizeInput(), # select administrative region (allows multiple selection)\n  actionButton(), # action button\n  checkboxInput(), # conditional panel (option to display line chart)\n  highchartOutput(), # display line chart\n  checkboxInput(), # conditional panel (option to display map information)\n  leafletOutput(), # display point spatial map\n)\n\nAspatialOverviewrow2 <-  fluidRow(\n  DT::dataTableOutput() # display datatable\n)\n\nAspatialDistributionrow1 <-  fluidRow(\n  sliderInput(), # select year range\n  radioButtons(), # select administrative region level\n  radioButtons(), # select display rates\n  selectInput(), # select colour palette\n  checkboxInput(), # Customise Spatial Map\n  selectInput(), # Spatial Map Classification Type\n  sliderInput(), # Number of Classes\n  checkboxInput(), # Customise Density Ridge Plot\n  selectInput(), # Density Ridge Style\n  tmapOutput(), # choropleth map\n  plotOutput() # density ridge plot\n)\n\nAspatialDistributionrow2 <-  fluidRow(\n  textOutput()\n)\n\n# geospatial analysis tab\nCluster2 <- fluidRow(\n  selectInput(), # select period\n  selectInput(), # select Moran Event Type\n  radioButtons(), # select Contiguity method \n  selectInput(), # select Spatial Weights Style\n  sliderInput(), # Number of Simulations\n  actionButton(), # action button \n  radioButtons(), # select confidence interval \n  selectInput(), # select Lisa Classification\n  selectInput(), # select Local Moran's Stat\n  plotOutput(), # LocalMoranMap\n  plotOutput(), # LisaMap \n  textOutput(),\n  DT::dataTableOutput()\n)\n\n\nHotCold1 <- fluidRow(\n  selectInput(), # select period\n  selectInput(), # select Moran Event Type\n  radioButtons(), # select Contiguity method \n  sliderInput(), # Number of Simulations\n  actionButton(), # action button \n  radioButtons(), # select confidence interval \n  selectInput(), # select local Gi stats\n  plotOutput(), # GI Stats\n  plotOutput(), # Sig hot/cold\n  textOutput(),\n  DT::dataTableOutput()\n)\n\nEHSA2 <- fluidRow(\n  selectInput(), # select event type\n  radioButtons(), # select Contiguity Method\"\n  sliderInput(), # select Time Lag of spatial neighbours\n  sliderInput(), # Number of Simulations\n  actionButton(),\n  checkboxInput(), # checkbox to show EHSA classes\n  plotlyOutput(), # display EHSA ba chart \n  checkboxInput(), # checkbox to show GI* trend plot\"\n  selectizeInput(), # select district\n  plotlyOutput(), # display Giplot\n  radioButtons(), # select Confidence level\n  plotOutput(), # EHSAmap\n  textOutput(), # EHSAText\n  DT::dataTableOutput(), # data table\n  textOutput()\n) \n\n# confirmatory analysis tab\nConfirm1 <- fluidRow(\n  selectInput(), # select time\n  selectizeInput(), # select event type\n  actionButton(), # reset button\n  selectInput(), # select test type\n  selectInput(), # Pairwise Display\n  selectInput(), # P-value adjustment method \n  radioButtons(), # select Confidence level\n  plotOutput(), # display Anovaplot\n)\n\nConfirm2 <- fluidRow(\n  textOutput()\n)\n\n\nConfirm3 <- fluidRow(\n  selectInput(), # select Year\n  selectizeInput(), # Region\n  selectizeInput(), # Event Type\n  selectInput(), # Include Data with or without Fatalities\n  actionButton(), \n  plotOutput() # plot Mosaic plot\n)\n\nConfirm4 <- fluidRow(\n  textOutput()\n)\n\n\n# subtabs\nAspatialSubTabs <- tabsetPanel(\n  tabPanel(\"Overview\", \n           AspatialOverviewrow1,\n           AspatialOverviewrow2\n  ),\n  tabPanel(\"Distribution Analysis\", \n           AspatialDistributionrow1,\n           AspatialDistributionrow2\n  )\n)\n\nClusterSubTabs <- tabsetPanel(\n  \n  tabPanel(\"Local Measures of Spatial Autocorrelation\", \n           Cluster2),\n  tabPanel(\"Hot & Cold Spot Analysis(HCSA)\", \n           HotCold1),\n  tabPanel(\"Emerging Hot Spot Analysis\", \n           EHSA2)\n)\n\nConfirmSubTabs <- tabsetPanel(\n  tabPanel(\"One-Way Anova Test\", \n           Confirm1,\n           Confirm2),\n  #tabPanel(\"Mosaic Plot\",\n  #         Confirm2),\n  tabPanel(\"Mosaic Plot-VCD\",\n           Confirm3,\n           Confirm4)\n  #Confirm2)\n  \n)\n\n\n#========================================================== \n## UI dashboard\n#========================================================== \nui <- dashboardPage(title = 'Armed Conflicts in Myanmar (2010 to 2023)', \n                    header, sidebar, body)  \n\n\n#========================================================== \n## Server Components\n#========================================================== \nserver <- function(input, output) {\n\n# aspatial analysis tab\noutput1-1-1 <- renderLeaflet({}) \noutput1-1-2 <- renderLeHighchart({}) \noutput1-1-3 <- DT::renderDataTable({}) \n\noutput1-2-1 <- renderTmap()\noutput1-2-2 <- renderPlot()\n\n# geospatial analysis tab\noutput2-1-1 <- renderPlot()\noutput2-1-2 <- renderPlot()\noutput2-1-3 <- renderDataTable()\n\noutput2-2-1 <- renderPlot()\noutput2-2-2 <- renderPlot()\noutput2-2-3 <- renderDataTable()\n\noutput2-3-1 <- renderPlot()\noutput2-3-2 <- renderPlot()\noutput2-3-3 <- renderDataTable()\n\n# confirmatory analysis tab\noutput3-1-1 <- renderPlot()\noutput3-2-1 <- renderPlot()\n}\n\n\n#========================================================== \n## Run Shiny Application\n#========================================================== \nshinyApp(ui = ui, server = server)\n```\n:::\n\n\n# Reference\n\n-   [R Shiny - COVID-19 tracker](https://shiny.posit.co/r/gallery/life-sciences/covid19-tracker/){target=\"_blank\"}\n-   [R Shiny - NCAA Swimming Team Finder for Incoming College Athletes](https://shiny.posit.co/r/gallery/education/ncaa-swim-team-finder/){target=\"_blank\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}